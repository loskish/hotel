/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GUIPlayerTab.java
 *
 * Created on 28-lug-2010, 21.13.15
 */

package it.losko.hotel.view.gui;

import it.losko.hotel.model.board.Hotel;
import it.losko.hotel.model.board.Square;
import it.losko.hotel.model.game.Game;
import it.losko.hotel.model.player.Player;

import java.util.List;

/**
 *
 * @author losko
 */
public class GUIPlayerTab extends javax.swing.JPanel {
	private static final long serialVersionUID = 1L;

	private final GUI gui;
	private final Player player;
	
    /** Creates new form GUIPlayerTab */
    public GUIPlayerTab(final GUI gui, final Player player) {
    	this.gui = gui;
    	this.player = player;
    	
        initComponents();
    }

    public GUI getGui() {
		return gui;
	}

	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        positionLabel = new javax.swing.JLabel();
        moneyLabel = new javax.swing.JLabel();
        hotelsLabel = new javax.swing.JLabel();
        positionValueLabel = new javax.swing.JLabel();
        moneyValueLabel = new javax.swing.JLabel();
        entrancesValueLabel = new javax.swing.JLabel();
        hotelsValueLabel = new javax.swing.JLabel();
        entrancesLabel = new javax.swing.JLabel();

        positionLabel.setText("Position:");

        moneyLabel.setText("Money:");

        hotelsLabel.setText("Hotels:");

        positionValueLabel.setText(String.valueOf(player.getPositionOnBoard()));

        moneyValueLabel.setText(String.valueOf(player.getAvailableMoney()));

        entrancesValueLabel.setText(getEntrances());
        entrancesValueLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        hotelsValueLabel.setText(getHotels());
        hotelsValueLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        hotelsValueLabel.setPreferredSize(new java.awt.Dimension(1, 1));

        entrancesLabel.setText("Entrances:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(hotelsLabel)
                            .addComponent(positionLabel)
                            .addComponent(moneyLabel)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(entrancesLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(entrancesValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hotelsValueLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                    .addComponent(positionValueLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(moneyValueLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(positionLabel)
                    .addComponent(positionValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(moneyLabel)
                    .addComponent(moneyValueLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hotelsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hotelsValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(entrancesValueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entrancesLabel))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel entrancesLabel;
    private javax.swing.JLabel entrancesValueLabel;
    private javax.swing.JLabel hotelsLabel;
    private javax.swing.JLabel hotelsValueLabel;
    private javax.swing.JLabel moneyLabel;
    private javax.swing.JLabel moneyValueLabel;
    private javax.swing.JLabel positionLabel;
    private javax.swing.JLabel positionValueLabel;
    // End of variables declaration//GEN-END:variables

    public void updateValues() {
    	positionValueLabel.setText(String.valueOf(player.getPositionOnBoard()));
		moneyValueLabel.setText(String.valueOf(player.getAvailableMoney()));
		hotelsValueLabel.setText("<html>" + getHotels() + "</html>");
		entrancesValueLabel.setText("<html>" + getEntrances() + "</html>");
    }
    
    private String getHotels() {
		StringBuffer sb = new StringBuffer();
		
		for(final Hotel hotel : player.getOwnedHotels()) {
			final String lastBuilding = hotel.isAtLeastOneBuildingBuilt() ? hotel.getLastBuiltBuilding().getName() : "Land";
			sb.append(hotel.getName() + " (" + lastBuilding + ")" + ", ");
		}
		if(sb.length() > 0)
			sb.replace(sb.lastIndexOf(", "), sb.length(), "");
		else
			sb.append("None");
		
		return sb.toString();
	}
	
	private String getEntrances() {
		StringBuffer sb = new StringBuffer();
		
		for(final Hotel hotel : player.getOwnedHotels()) {
			StringBuffer sben = new StringBuffer();
			List<Square> squares = hotel.getAdjacentSquaresWithABuiltEntrance();
			if(squares != null && squares.size() > 0) {
				for(final Square square : hotel.getAdjacentSquaresWithABuiltEntrance()) {
					sben.append(Game.getSingleton().getBoard().getSquarePosition(square) + ", ");
				}
				if(sben.length() > 0)
					sben.replace(sben.lastIndexOf(", "), sben.length(), "");
				
				sb.append(hotel.getName() + ": " + sben + "; ");
			}
		}
		if(sb.length() > 0)
			sb.replace(sb.lastIndexOf("; "), sb.length(), "");
		else
			sb.append("None");
		
		return sb.toString();
	}
}
